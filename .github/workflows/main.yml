name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions
on: push

env:
  uniqueWorkspaceId: /u/wfezzan/builds-github/${{ github.repository }}/${{ github.ref_name }}/build_b${{github.run_number }} # adding a b to before the number,
    # to avoid an error caused by repeated build numbers 
  branch : ${{ github.ref_name }} 
  application: ${{ github.event.repository.name }}
  pipelineType: ${{ inputs.pipelineType }}
  packageName: ${{github.run_id}}
  zosHostname: 9.76.61.15
  zosSFTPUser: WFEZZAN@10.3.20.34
  WD_ARTIFACTS: /u/wfezzan/wazi-deploy-artifacts
  WD_SAMPLES: /var/wazi-deploy-samples/cics-genapp/wazideploy-samples/python/dbb
  PACKAGE_BUILD_OUTPUTS_FOLDER: /var/dbb-pipelineBackend/dbb/Pipeline/PackageBuildOutputs
  ARTIFACTORY_STATIC_BUILD_NAME: cics-genapp-wd-static-build
  wdEnvironmentFileTest: /u/wfezzan/wazi-deploy-artifacts/zos-environment.yml
  DBB_HOME: /u/wfezzan/dbb-v3
  REPORT_FOLDER: /u/wfezzan/builds-github/${{ github.repository }}/${{ github.ref_name }}/build_b${{github.run_number }}
  CC_CLASS: /usr/lpp/debug/v16/plugins/com.ibm.debug.pdt.codecoverage.core.results_13.0.6
  CC_DBBANALYZE: /var/dbb/Pipeline/AnalyzeCodeCoverageReport


jobs:
  Setup:
    runs-on: self-hosted
    steps:
      - name: Clone Repo to z/OS Unix System Services
        run: |
           ssh ${{ env.zosSFTPUser}} ". ./.profile && gitClone.sh -w ${{ env.uniqueWorkspaceId }} -r  https://${{ secrets.eole59_token }}github.com/${{ github.repository }}.git -b${{ env.branch }}" 
          
  Build_Test:
    needs: Setup
    runs-on: self-hosted
    steps:
      - name: Build Application
        run: | 
            ssh ${{ env.zosSFTPUser}} ". ./.profile && dbbBuild.sh -w ${{ env.uniqueWorkspaceId }} -a ${{env.application}} -b ${{ env.branch }} -p build -t --impactBuild-t --cc -v"
      - name: Prepare logs
        run: | 
          ssh ${{ env.zosSFTPUser}} ". ./.profile && prepareLogs.sh -w ${{ env.uniqueWorkspaceId }}" 
          rm -rf "${{ runner.temp }}/build-logs" 
          mkdir "${{ runner.temp }}/build-logs" 
          sftp ${{ env.zosSFTPUser}}:${{ env.uniqueWorkspaceId }}/*.tar "\"${{ runner.temp }}/build-logs\""
          tar -xvf "${{ runner.temp }}/build-logs/logs.tar" -C "${{ runner.temp }}/build-logs"
      - name: Upload build logs
        uses: actions/upload-artifact@v4
        with:
                name: build_logs_${{github.run_number }}                        # Name used for artifact when it is uploaded
                path: ${{ runner.temp }}/build-logs                             # Path to build logs artifacts
                retention-days: 1
  
  
  CodeCoverage:
     needs: Build_Test
     runs-on: self-hosted
     steps:
      - name: Build Application
        run: | 
            echo "code coverage"
            ssh ${{ env.zosSFTPUser}} ". ./.profile && mv /tmp/CC/* ${{ env.uniqueWorkspaceId }}/"
            if [ `ls -a ${{ env.uniqueWorkspaceId }}/*.cczip | wc -l` -gt 0 ]; then $DBB_HOME/bin/groovyz -cp $CC_CLASS/lib/ccapi.jar $CC_DBBANALYZE/AnalyzeCodeCoverageReport.groovy -f `ls -m ${{ env.uniqueWorkspaceId }}/*.cczip | sed "s/ //g"`; fi
   
  
  
  CodeReview:
     needs: Build_Test
     runs-on: self-hosted
     steps:
      - name: Build Application
        run: | 
            ssh ${{ env.zosSFTPUser}} ". ./.profile && $DBB_HOME/bin/groovyz /var/dbb/Pipeline/RunIDZCodeReview/RunCodeReview.groovy --workDir ${{ env.uniqueWorkspaceId }}/logs --cr  /var/dbb-pipeline/cics-genapp/cr-rules/CodeReviewRules.dat -ccr /var/dbb-pipeline/cics-genapp/cr-rules/CodeReviewRules.ccr"
      - name: Prepare Code review Reports
        run: | 
            rm -rf "${{ runner.temp }}/CodeReview-logs"
            mkdir "${{ runner.temp }}/CodeReview-logs"    
            sftp -r ${{ env.zosSFTPUser}}:${{ env.uniqueWorkspaceId }}/logs/CodeReview* "\"${{ runner.temp }}/CodeReview-logs\""
      - name: Upload Code Review logs
        uses: actions/upload-artifact@v4
        with:
              name: codereview_logs_${{github.run_number }}                        # Name used for artifact when it is uploaded
              path: ${{ runner.temp }}/CodeReview-logs                        # Path to build logs artifacts
              retention-days: 1
  Package:
        needs: CodeReview
        runs-on: self-hosted
        steps:
          - name: Create Package and publish to Nexus
            run: |
                ssh ${{env.zosSFTPUser}} ". ./.profile && cd ${WD_ARTIFACTS}"
                ssh ${{env.zosSFTPUser}} ". ./.profile && python  $WD_SAMPLES/dbb_prepare_local_folder.py --dbbBuildResult ${{ env.uniqueWorkspaceId }}/logs/BuildReport.json --workingFolder ${{ env.uniqueWorkspaceId }}/package"     
                ssh ${{env.zosSFTPUser}} ". ./.profile && /u/wfezzan/dbb-v3/bin/groovyz $PACKAGE_BUILD_OUTPUTS_FOLDER/PackageBuildOutputs.groovy --workDir ${{ env.uniqueWorkspaceId }}/logs -p -ad ${{env.application}} -v branch-${{ env.branch }}/pipeline-${{github.run_number }}/${{env.application}}.tar  -aprop /u/wfezzan/builds/appArtifactRepository.properties" 
          - name: Create Package locally
            run: ssh ${{env.zosSFTPUser}} ". ./.profile && /u/wfezzan/dbb-v3/bin/groovyz $PACKAGE_BUILD_OUTPUTS_FOLDER/PackageBuildOutputs.groovy --workDir ${{ env.uniqueWorkspaceId }}/logs --tarFileName ${{env.application}}-${{github.run_number }}.tar --application ${{env.application}} --addExtension --branch main --generateWaziDeployAppManifest --versionName v1 --verbose"

   
  Deploy-integration:
        needs: Package
        runs-on: self-hosted
        steps:
          - name: Generate Deployment Plan 
            run: ssh ${{ env.zosSFTPUser}} ". ./.profile && wazideploy-generate.sh -w ${{ env.uniqueWorkspaceId }} -m /u/wfezzan/wazi-deploy-artifacts/deploy-method-cics.yaml -p /u/wfezzan/wazi-deploy-artifacts/github/deploymentPlan-${{github.run_number }} -r /u/wfezzan/wazi-deploy-artifacts/github/deploymentPlanReport-${{github.run_number }} -i ${{ env.uniqueWorkspaceId }}/logs/${{env.application}}-${{github.run_number }}.tar"
          - name: Deploy to Integration Environment 
            run: ssh ${{ env.zosSFTPUser}} ". ./.profile && wazideploy-deploy.sh -w ${{ env.uniqueWorkspaceId }} -p /u/wfezzan/wazi-deploy-artifacts/github/deploymentPlan-${{github.run_number }}  -e ${wdEnvironmentFileTest} -i ${{ env.uniqueWorkspaceId }}/logs/${{env.application}}-${{github.run_number }}.tar -l /u/wfezzan/wazi-deploy-artifacts/github/evidences/evidences_${{github.run_number }}.yml < /dev/null"   
          - name: Analyze Deployment Report and publish
            run: |
               ssh ${{ env.zosSFTPUser}} ". ./.profile && cd /u/wfezzan/wazi-deploy-artifacts/github/evidences-artifacts"
                ssh ${{ env.zosSFTPUser}} ". ./.profile && pwd"
               ssh ${{ env.zosSFTPUser}} ". ./.profile && wazideploy-evidence -if /u/wfezzan/wazi-deploy-artifacts/github/evidences/index -df /u/wfezzan/wazi-deploy-artifacts/github/evidences i"
               ssh ${{ env.zosSFTPUser}} ". ./.profile && wazideploy-evidence -df /u/wfezzan/wazi-deploy-artifacts/github/evidences -t /u/wfezzan/wazi-deploy-artifacts/github/evidences-artifacts/full-report.yml -o /u/wfezzan/wazi-deploy-artifacts/github/evidences-artifacts/deployment-reports/deployment-report_${{github.run_number }}.html r renderer=/u/wfezzan/wazi-deploy-artifacts/github/evidences-artifacts/full-report.html environment_name=zos_env_test"
               ssh ${{ env.zosSFTPUser}} ". ./.profile && cp /u/wfezzan/wazi-deploy-artifacts/github/evidences-artifacts/deployment-reports/deployment-report_${{github.run_number }}.html ${{ env.uniqueWorkspaceId }}/"
               rm -rf "${{ runner.temp }}/deploy-logs"
                mkdir "${{ runner.temp }}/deploy-logs"
                sftp -r ${{ env.zosSFTPUser}}:${{ env.uniqueWorkspaceId }}/deployment-report_${{github.run_number }}.html "\"${{ runner.temp }}/deploy-logs\""
          - name: Upload deploy logs
            uses: actions/upload-artifact@v4
            with:
              name: deploy_logs_${{github.run_number }}                        # Name used for artifact when it is uploaded
              path: ${{ runner.temp }}/deploy-logs                        # Path to build logs artifacts
              retention-days: 1
                
